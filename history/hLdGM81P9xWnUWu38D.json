[{
  "history_id" : "ijhk7693fgc",
  "history_input" : "# Earthdata Login\nfrom netrc import netrc\nfrom subprocess import Popen\nfrom platform import system\nfrom getpass import getpass\nimport os\n\n# Direct access\nimport requests\nimport s3fs\nimport xarray as xr\nimport hvplot.xarray\n\n# Harmony\nfrom harmony import BBox, Client, Collection, Request, LinkType\nfrom harmony.config import Environment\nfrom pprint import pprint\nimport datetime as dt",
  "history_output" : "",
  "history_begin_time" : 1686606101448,
  "history_end_time" : 1686606104968,
  "history_notes" : null,
  "history_process" : "iy50ea",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "hcj4swdcjbx",
  "history_input" : "from utils import *\n\nurs = 'urs.earthdata.nasa.gov'    # Earthdata URL endpoint for authentication\nprompts = ['Enter NASA Earthdata Login Username: ',\n           'Enter NASA Earthdata Login Password: ']\n\n# Determine the OS (Windows machines usually use an '_netrc' file)\nnetrc_name = \"_netrc\" if system()==\"Windows\" else \".netrc\"\n\n# Determine if netrc file exists, and if so, if it includes NASA Earthdata Login Credentials\ntry:\n    netrcDir = os.path.expanduser(f\"~/{netrc_name}\")\n    netrc(netrcDir).authenticators(urs)[0]\n\n# Below, create a netrc file and prompt user for NASA Earthdata Login Username and Password\nexcept FileNotFoundError:\n    homeDir = os.path.expanduser(\"~\")\n    Popen('touch {0}{2} | echo machine {1} >> {0}{2}'.format(homeDir + os.sep, urs, netrc_name), shell=True)\n    Popen('echo login {} >> {}{}'.format(getpass(prompt=prompts[0]), homeDir + os.sep, netrc_name), shell=True)\n    Popen('echo \\'password {} \\'>> {}{}'.format(getpass(prompt=prompts[1]), homeDir + os.sep, netrc_name), shell=True)\n    # Set restrictive permissions\n    Popen('chmod 0600 {0}{1}'.format(homeDir + os.sep, netrc_name), shell=True)\n\n    # Determine OS and edit netrc file if it exists but is not set up for NASA Earthdata Login\nexcept TypeError:\n    homeDir = os.path.expanduser(\"~\")\n    Popen('echo machine {1} >> {0}{2}'.format(homeDir + os.sep, urs, netrc_name), shell=True)\n    Popen('echo login {} >> {}{}'.format(getpass(prompt=prompts[0]), homeDir + os.sep, netrc_name), shell=True)\n    Popen('echo \\'password {} \\'>> {}{}'.format(getpass(prompt=prompts[1]), homeDir + os.sep, netrc_name), shell=True)",
  "history_output" : "",
  "history_begin_time" : 1686606106347,
  "history_end_time" : 1686606109987,
  "history_notes" : null,
  "history_process" : "y2amjw",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "ohtyj5oefrd",
  "history_input" : "import os\nimport matplotlib.pyplot as plt\nfrom authenticate import *\n\nhome_dir = os.path.expanduser(\"~\")\nplot_file_name = os.path.join(home_dir, \"podaac_s3_plot_1.png\")\n\nif os.path.isfile(plot_file_name):\n  os.remove(plot_file_name)\n\nurs = 'urs.earthdata.nasa.gov'    # Earthdata URL endpoint for authentication\nprompts = ['Enter NASA Earthdata Login Username: ',\n           'Enter NASA Earthdata Login Password: ']\n\n# Determine the OS (Windows machines usually use an '_netrc' file)\nnetrc_name = \"_netrc\" if system()==\"Windows\" else \".netrc\"\n\n# Determine if netrc file exists, and if so, if it includes NASA Earthdata Login Credentials\ntry:\n    netrcDir = os.path.expanduser(f\"~/{netrc_name}\")\n    netrc(netrcDir).authenticators(urs)[0]\n\n# Below, create a netrc file and prompt user for NASA Earthdata Login Username and Password\nexcept FileNotFoundError:\n    homeDir = os.path.expanduser(\"~\")\n    Popen('touch {0}{2} | echo machine {1} >> {0}{2}'.format(homeDir + os.sep, urs, netrc_name), shell=True)\n    Popen('echo login {} >> {}{}'.format(getpass(prompt=prompts[0]), homeDir + os.sep, netrc_name), shell=True)\n    Popen('echo \\'password {} \\'>> {}{}'.format(getpass(prompt=prompts[1]), homeDir + os.sep, netrc_name), shell=True)\n    # Set restrictive permissions\n    Popen('chmod 0600 {0}{1}'.format(homeDir + os.sep, netrc_name), shell=True)\n\n    # Determine OS and edit netrc file if it exists but is not set up for NASA Earthdata Login\nexcept TypeError:\n    homeDir = os.path.expanduser(\"~\")\n    Popen('echo machine {1} >> {0}{2}'.format(homeDir + os.sep, urs, netrc_name), shell=True)\n    Popen('echo login {} >> {}{}'.format(getpass(prompt=prompts[0]), homeDir + os.sep, netrc_name), shell=True)\n    Popen('echo \\'password {} \\'>> {}{}'.format(getpass(prompt=prompts[1]), homeDir + os.sep, netrc_name), shell=True)\n\ns3_cred_endpoint = {\n    'podaac':'https://archive.podaac.earthdata.nasa.gov/s3credentials',\n    'gesdisc': 'https://data.gesdisc.earthdata.nasa.gov/s3credentials',\n    'lpdaac':'https://data.lpdaac.earthdatacloud.nasa.gov/s3credentials',\n    'ornldaac': 'https://data.ornldaac.earthdata.nasa.gov/s3credentials',\n    'ghrcdaac': 'https://data.ghrc.earthdata.nasa.gov/s3credentials'\n}\n\ndef get_temp_creds(provider):\n    return requests.get(s3_cred_endpoint[provider]).json()\ntemp_creds_req = get_temp_creds('podaac')\nfs_s3 = s3fs.S3FileSystem(anon=False, \n                          key=temp_creds_req['accessKeyId'], \n                          secret=temp_creds_req['secretAccessKey'], \n                          token=temp_creds_req['sessionToken'],\n                          client_kwargs={'region_name':'us-west-2'})\nshort_name = 'MODIS_T-JPL-L2P-v2019.0'\ns3_url = 's3://podaac-ops-cumulus-protected/MODIS_T-JPL-L2P-v2019.0/20210820033500-JPL-L2P_GHRSST-SSTskin-MODIS_T-N-v02.0-fv01.0.nc'\n\ns3_file_obj = fs_s3.open(s3_url, mode='rb')\nssh_ds = xr.open_dataset(s3_file_obj)\nssh_ds.sea_surface_temperature.plot()\nplt.savefig(plot_file_name)\nprint('comes till here')\ns3_file_obj.close()",
  "history_output" : "comes till here\nException ignored in: <function CachingFileManager.__del__ at 0x7f9885e7a8b0>\nTraceback (most recent call last):\n  File \"/srv/conda/envs/notebook/lib/python3.9/site-packages/xarray/backends/file_manager.py\", line 249, in __del__\n  File \"/srv/conda/envs/notebook/lib/python3.9/site-packages/xarray/backends/file_manager.py\", line 233, in close\n  File \"/srv/conda/envs/notebook/lib/python3.9/site-packages/h5netcdf/core.py\", line 1209, in close\n  File \"/srv/conda/envs/notebook/lib/python3.9/site-packages/h5py/_hl/files.py\", line 585, in close\nTypeError: bad operand type for unary ~: 'NoneType'\nException ignored in: <function File.close at 0x7f987465c9d0>\nTraceback (most recent call last):\n  File \"/srv/conda/envs/notebook/lib/python3.9/site-packages/h5netcdf/core.py\", line 1209, in close\n  File \"/srv/conda/envs/notebook/lib/python3.9/site-packages/h5py/_hl/files.py\", line 585, in close\nTypeError: bad operand type for unary ~: 'NoneType'\n",
  "history_begin_time" : 1686606111973,
  "history_end_time" : 1686606123556,
  "history_notes" : null,
  "history_process" : "cqp5y5",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "wjylkvlwtxf",
  "history_input" : "pass",
  "history_output" : "",
  "history_begin_time" : 1686606183565,
  "history_end_time" : 1686606184215,
  "history_notes" : null,
  "history_process" : "dh8stf",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "4lwqg6mslqb",
  "history_input" : "import sys\nfrom podaac_s3 import *\nimport warnings\nimport netCDF4 as nc\n\nhome_dir = os.path.expanduser(\"~\")\nplot_file_name = os.path.join(home_dir, \"harmony_plot_1.png\")\n\nif os.path.isfile(plot_file_name):\n  os.remove(plot_file_name)\n\nwarnings.filterwarnings(\"ignore\", category=UserWarning)  # Ignore specific warning category\n\nharmony_client = Client()\nrequest = Request(\n  collection=Collection(id=short_name),\n  spatial=BBox(-97.77667, 21.20806, -83.05197, 30.16605),\n  temporal={\n    'start': dt.datetime(2021, 8, 20),\n    'stop': dt.datetime(2021, 8, 21),\n  },\n)\njob_id = harmony_client.submit(request)\nharmony_client.wait_for_processing(job_id, show_progress=True)\ndata = harmony_client.result_json(job_id)\nresults = harmony_client.result_urls(job_id, link_type=LinkType.s3)\nurls = list(results)\nfilename = '20210820033500-JPL-L2P_GHRSST-SSTskin-MODIS_T-N-v02.0-fv01.0_subsetted.nc4'\n\nurl = [url for url in urls if filename in url][0]\ncreds = harmony_client.aws_credentials()\ns3_fs = s3fs.S3FileSystem(\n  key=creds['aws_access_key_id'],\n  secret=creds['aws_secret_access_key'],\n  token=creds['aws_session_token'],\n  client_kwargs={'region_name': 'us-west-2'},\n)\n\ntry:\n  with s3_fs.open(url, mode='rb') as f:\n    ds = nc.Dataset('temporary_file.nc', memory=f.read(), diskless=True)\n    sst_variable = ds.variables['sea_surface_temperature']\n    sst_data = sst_variable[:]\n\n    # Plot the data\n    for i in range(sst_data.shape[0]):\n        plt.plot(sst_data[i])\n\n    plt.savefig(plot_file_name)\nexcept:\n  pass\n",
  "history_output" : " [ Processing:   0% ] |                                                   | [/]comes till here\n [ Processing:   0% ] |                                                   | [-]\n [ Processing:   0% ] |                                                   | [\\]\n [ Processing:   0% ] |                                                   | [|]\n [ Processing:   0% ] |                                                   | [/]\n [ Processing:   0% ] |                                                   | [-]\n [ Processing:   0% ] |                                                   | [\\]\n [ Processing:   0% ] |                                                   | [|]\n [ Processing:   0% ] |                                                   | [/]\n [ Processing:   0% ] |                                                   | [-]\n [ Processing:   0% ] |                                                   | [\\]\n [ Processing:   0% ] |                                                   | [|]\n [ Processing:   0% ] |                                                   | [/]\n [ Processing:   0% ] |                                                   | [-]\n [ Processing:   0% ] |                                                   | [\\]\n [ Processing:   0% ] |                                                   | [|]\n [ Processing:   0% ] |                                                   | [/]\n [ Processing:   0% ] |                                                   | [-]\n [ Processing:   0% ] |                                                   | [\\]\n [ Processing:   0% ] |                                                   | [|]\n [ Processing:   0% ] |                                                   | [/]\n [ Processing:   0% ] |                                                   | [-]\n [ Processing:   0% ] |                                                   | [\\]\n [ Processing:   0% ] |                                                   | [|]\n [ Processing:   0% ] |                                                   | [/]\n [ Processing:   0% ] |                                                   | [-]\n [ Processing:   0% ] |                                                   | [\\]\n [ Processing:   0% ] |                                                   | [|]\n [ Processing:   0% ] |                                                   | [/]\n [ Processing:   0% ] |                                                   | [-]\n [ Processing:   0% ] |                                                   | [\\]\n [ Processing:   0% ] |                                                   | [|]\n [ Processing:   0% ] |                                                   | [/]\n [ Processing:   0% ] |                                                   | [-]\n [ Processing:   0% ] |                                                   | [\\]\n [ Processing:   0% ] |                                                   | [|]\n [ Processing:  16% ] |########                                           | [/]\n [ Processing:  16% ] |########                                           | [-]\n [ Processing:  16% ] |########                                           | [\\]\n [ Processing:  16% ] |########                                           | [|]\n [ Processing:  16% ] |########                                           | [/]\n [ Processing:  16% ] |########                                           | [-]\n [ Processing:  16% ] |########                                           | [\\]\n [ Processing:  16% ] |########                                           | [|]\n [ Processing:  16% ] |########                                           | [/]\n [ Processing:  16% ] |########                                           | [-]\n [ Processing:  16% ] |########                                           | [\\]\n [ Processing:  16% ] |########                                           | [|]\n [ Processing:  16% ] |########                                           | [/]\n [ Processing:  16% ] |########                                           | [-]\n [ Processing:  16% ] |########                                           | [\\]\n [ Processing:  16% ] |########                                           | [|]\n [ Processing:  16% ] |########                                           | [/]\n [ Processing:  16% ] |########                                           | [-]\n [ Processing:  33% ] |################                                   | [\\]\n [ Processing:  33% ] |################                                   | [|]\n [ Processing:  33% ] |################                                   | [/]\n [ Processing:  33% ] |################                                   | [-]\n [ Processing:  33% ] |################                                   | [\\]\n [ Processing:  33% ] |################                                   | [|]\n [ Processing:  33% ] |################                                   | [/]\n [ Processing:  33% ] |################                                   | [-]\n [ Processing:  33% ] |################                                   | [\\]\n [ Processing:  33% ] |################                                   | [|]\n [ Processing:  33% ] |################                                   | [/]\n [ Processing:  33% ] |################                                   | [-]\n [ Processing:  33% ] |################                                   | [\\]\n [ Processing:  33% ] |################                                   | [|]\n [ Processing:  33% ] |################                                   | [/]\n [ Processing:  33% ] |################                                   | [-]\n [ Processing:  33% ] |################                                   | [\\]\n [ Processing:  33% ] |################                                   | [|]\n [ Processing: 100% ] |###################################################| [/]\n [ Processing: 100% ] |###################################################| [|]\n",
  "history_begin_time" : 1686606124993,
  "history_end_time" : 1686606182365,
  "history_notes" : null,
  "history_process" : "u09gh6",
  "host_id" : "100001",
  "indicator" : "Failed"
}]
